syntax = "proto3";

package user;

service UserService {

    rpc CreateUser (CreateUserDto) returns (User) {}

    /*** Create a Post for a particular user procedure **/
    rpc CreatePost (CreatePostDto) returns (User) {}

    /********** Get All Listed Posts **************/

    rpc FindAllPost (Empty) returns (Users) {}

    /*********** Get a single post by id ************/

    rpc FindOnePost (FindOnePostDto) returns (User) {}

    /*************  Update a user Post ****************/
    
    rpc UpdatePost (UpdatePostDto) returns (User) {}

    /************** Delete a single Post by id ******************/
    
    rpc RemovePost (FindOnePostDto) returns (User) {}

    /***************** Return a large amount of POST data, return a stream *********************************/
    rpc QueryUsers (stream PaginationDto) returns (stream Users) {}

    rpc LoginUserOtp(LoginUserOtpPayload) returns (LoginNoPassResponse);

    /**
    *  This endpoint authenticates a user by accepting the valid login payload and returns user data with auth token
    */
    rpc LoginUser(LoginPayload) returns (User);

    rpc GetUserById (FindOneUserDto) returns (User);

    /**
    *  This endpoint verifys a user by accepting the valid otp payload and returns user data with auth token
    */
    rpc VerifyOTP(VerifyOTPpayload) returns (User);

}

message Empty {};

message CreateUserDto {
    string first_name = 1;
    string last_name = 2;
    string username = 3;
    string phone = 4;
    string password = 5;
    string image_url = 6;
}

message CreatePostDto {
    string user_id = 1;
    PostDetails post_details = 3;
}

message PostDetails {
    string content = 1;
    string select_category = 2;
}

message UpdatePostDto {
    string id = 1;
    PostDetails post_details = 2;
}

message FindOnePostDto {
    string id = 1;
}

message User {
    string first_name = 1;
    string last_name = 2;
    string image_url = 3;
    PostDetails post_details = 4;
    string create_at = 5;
    string update_at = 6;
    string username = 7;
    string phone = 8;
}

message Users {
    repeated User users = 1;
}

message FindOneUserDto {
    string id = 1;
}

message Interaction {
    string user_id = 1;
    string up_voting = 2;
    string down_voting = 3;
}

message Comments {
    string user_id = 1;
    string comment = 2;
}

message GetUserByUsernameOrPhoneRequest {
    string username = 1;
    string phone = 2;
}

message PaginationDto {
    int32 page = 1;
    int32 skip = 2;
}

message LoginUserOtpPayload {
    string payload = 1;
}

message LoginPayload {
    string username = 1;
    string phone = 2;
    string password = 3;
}

message LoginNoPassResponse {
    string message = 1;
    string user_id = 2;
}

message VerifyOTPpayload {
    string otp = 1;
    string user_id = 2;
}